{"version":3,"sources":["../src/recaptcha/load-script.ts","../src/recaptcha/tokens.ts","../src/recaptcha/recaptcha-loader.service.ts","../src/recaptcha/recaptcha.component.ts","../src/recaptcha/recaptcha-common.module.ts","../src/recaptcha/recaptcha.module.ts","../../node_modules/tslib/tslib.es6.js","../src/recaptcha/recaptcha-v3.service.ts","../src/recaptcha/recaptcha-v3.module.ts","../src/recaptcha/recaptcha-value-accessor.directive.ts","../src/recaptcha/recaptcha-forms.module.ts"],"names":["loadScript","renderMode","onLoaded","urlParams","url","nonce","window","ng2recaptchaloaded","grecaptcha","script","document","createElement","innerHTML","baseUrl","src","async","defer","head","appendChild","RECAPTCHA_LANGUAGE","InjectionToken","RECAPTCHA_BASE_URL","RECAPTCHA_NONCE","RECAPTCHA_SETTINGS","RECAPTCHA_V3_SITE_KEY","RecaptchaLoaderService","platformId","language","v3SiteKey","this","init","ready","isPlatformBrowser","asObservable","of","prototype","subject_1","BehaviorSubject","langParam","next","Injectable","Object","decorators","type","Inject","args","PLATFORM_ID","Optional","nextId","RecaptchaComponent","elementRef","loader","zone","settings","id","errorMode","resolved","EventEmitter","error","siteKey","theme","size","badge","ngAfterViewInit","_this","subscription","subscribe","render","Function","renderRecaptcha","ngOnDestroy","grecaptchaReset","unsubscribe","execute","widget","executeRequested","reset","getResponse","emit","expired","errored","captchaResponseCallback","response","runOutsideAngular","renderOptions","callback","run","expired-callback","sitekey","tabindex","tabIndex","_i","arguments","length","nativeElement","Component","exportAs","selector","template","ElementRef","NgZone","Input","HostBinding","Output","NgModule","declarations","exports","imports","RecaptchaCommonModule","providers","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","value","ReCaptchaV3Service","onLoadComplete","actionBacklog","forEach","_a","_b","action","subject","executeActionWithSubject","undefined","isBrowser","defineProperty","onExecuteSubject","Subject","onExecuteObservable","onExecuteErrorSubject","onExecuteErrorObservable","onError","then","token","complete","RecaptchaValueAccessorDirective","host","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","onResolve","$event","Directive","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","HostListener","FormsModule"],"mappings":"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","sourcesContent":["declare global {\n  interface Window {\n    ng2recaptchaloaded: () => void;\n  }\n}\n\nexport function loadScript(\n  renderMode: \"explicit\" | string,\n  onLoaded: (grecaptcha: ReCaptchaV2.ReCaptcha) => void,\n  urlParams: string,\n  url?: string,\n  nonce?: string\n): void {\n  window.ng2recaptchaloaded = () => {\n    onLoaded(grecaptcha);\n  };\n  const script = document.createElement(\"script\");\n  script.innerHTML = \"\";\n  const baseUrl = url || \"https://www.google.com/recaptcha/api.js\";\n\n  script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n  if (nonce) {\n    script.nonce = nonce;\n  }\n  script.async = true;\n  script.defer = true;\n  document.head.appendChild(script);\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { RecaptchaSettings } from \"./recaptcha-settings\";\n\nexport const RECAPTCHA_LANGUAGE = new InjectionToken<string>(\n  \"recaptcha-language\"\n);\nexport const RECAPTCHA_BASE_URL = new InjectionToken<string>(\n  \"recaptcha-base-url\"\n);\nexport const RECAPTCHA_NONCE = new InjectionToken<string>(\n  \"recaptcha-nonce-tag\"\n);\nexport const RECAPTCHA_SETTINGS = new InjectionToken<RecaptchaSettings>(\n  \"recaptcha-settings\"\n);\nexport const RECAPTCHA_V3_SITE_KEY = new InjectionToken<string>(\n  \"recaptcha-v3-site-key\"\n);\n","import { isPlatformBrowser } from \"@angular/common\";\nimport { Inject, Injectable, Optional, PLATFORM_ID } from \"@angular/core\";\nimport { BehaviorSubject, Observable, of } from \"rxjs\";\n\nimport { loadScript } from \"./load-script\";\nimport {\n  RECAPTCHA_BASE_URL,\n  RECAPTCHA_LANGUAGE,\n  RECAPTCHA_NONCE,\n  RECAPTCHA_V3_SITE_KEY,\n} from \"./tokens\";\n\n@Injectable()\nexport class RecaptchaLoaderService {\n  /**\n   * @internal\n   * @nocollapse\n   */\n  private static ready: BehaviorSubject<ReCaptchaV2.ReCaptcha> = null;\n\n  public ready: Observable<ReCaptchaV2.ReCaptcha>;\n\n  /** @internal */\n  private language: string;\n  /** @internal */\n  private baseUrl: string;\n  /** @internal */\n  private nonce: string;\n  /** @internal */\n  private v3SiteKey: string;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) private readonly platformId: Object,\n    @Optional() @Inject(RECAPTCHA_LANGUAGE) language?: string,\n    @Optional() @Inject(RECAPTCHA_BASE_URL) baseUrl?: string,\n    @Optional() @Inject(RECAPTCHA_NONCE) nonce?: string,\n    @Optional() @Inject(RECAPTCHA_V3_SITE_KEY) v3SiteKey?: string\n  ) {\n    this.language = language;\n    this.baseUrl = baseUrl;\n    this.nonce = nonce;\n    this.v3SiteKey = v3SiteKey;\n    this.init();\n    this.ready = isPlatformBrowser(this.platformId)\n      ? RecaptchaLoaderService.ready.asObservable()\n      : of();\n  }\n\n  /** @internal */\n  private init() {\n    if (RecaptchaLoaderService.ready) {\n      return;\n    }\n    if (isPlatformBrowser(this.platformId)) {\n      const subject = new BehaviorSubject<ReCaptchaV2.ReCaptcha>(null);\n      RecaptchaLoaderService.ready = subject;\n      const langParam = this.language ? \"&hl=\" + this.language : \"\";\n\n      const renderMode = this.v3SiteKey || \"explicit\";\n      loadScript(\n        renderMode,\n        (grecaptcha) => subject.next(grecaptcha),\n        langParam,\n        this.baseUrl,\n        this.nonce\n      );\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { RecaptchaLoaderService } from \"./recaptcha-loader.service\";\nimport { RecaptchaSettings } from \"./recaptcha-settings\";\nimport { RECAPTCHA_SETTINGS } from \"./tokens\";\n\nlet nextId = 0;\n\nexport type NeverUndefined<T> = T extends undefined ? never : T;\n\nexport type RecaptchaErrorParameters = Parameters<\n  NeverUndefined<ReCaptchaV2.Parameters[\"error-callback\"]>\n>;\n\n@Component({\n  exportAs: \"reCaptcha\",\n  selector: \"re-captcha\",\n  template: ``,\n})\nexport class RecaptchaComponent implements AfterViewInit, OnDestroy {\n  @Input()\n  @HostBinding(\"attr.id\")\n  public id = `ngrecaptcha-${nextId++}`;\n\n  @Input() public siteKey: string;\n  @Input() public theme: ReCaptchaV2.Theme;\n  @Input() public type: ReCaptchaV2.Type;\n  @Input() public size: ReCaptchaV2.Size;\n  @Input() public tabIndex: number;\n  @Input() public badge: ReCaptchaV2.Badge;\n  @Input() public errorMode: \"handled\" | \"default\" = \"default\";\n\n  @Output() public resolved = new EventEmitter<string>();\n  // The rename will happen a bit later\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() public error = new EventEmitter<RecaptchaErrorParameters>();\n\n  /** @internal */\n  private subscription: Subscription;\n  /** @internal */\n  private widget: number;\n  /** @internal */\n  private grecaptcha: ReCaptchaV2.ReCaptcha;\n  /** @internal */\n  private executeRequested: boolean;\n\n  constructor(\n    private elementRef: ElementRef,\n    private loader: RecaptchaLoaderService,\n    private zone: NgZone,\n    @Optional() @Inject(RECAPTCHA_SETTINGS) settings?: RecaptchaSettings\n  ) {\n    if (settings) {\n      this.siteKey = settings.siteKey;\n      this.theme = settings.theme;\n      this.type = settings.type;\n      this.size = settings.size;\n      this.badge = settings.badge;\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    this.subscription = this.loader.ready.subscribe(\n      (grecaptcha: ReCaptchaV2.ReCaptcha) => {\n        if (grecaptcha != null && grecaptcha.render instanceof Function) {\n          this.grecaptcha = grecaptcha;\n          this.renderRecaptcha();\n        }\n      }\n    );\n  }\n\n  public ngOnDestroy(): void {\n    // reset the captcha to ensure it does not leave anything behind\n    // after the component is no longer needed\n    this.grecaptchaReset();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Executes the invisible recaptcha.\n   * Does nothing if component's size is not set to \"invisible\".\n   */\n  public execute(): void {\n    if (this.size !== \"invisible\") {\n      return;\n    }\n\n    if (this.widget != null) {\n      this.grecaptcha.execute(this.widget);\n    } else {\n      // delay execution of recaptcha until it actually renders\n      this.executeRequested = true;\n    }\n  }\n\n  public reset(): void {\n    if (this.widget != null) {\n      if (this.grecaptcha.getResponse(this.widget)) {\n        // Only emit an event in case if something would actually change.\n        // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n        // on a non-resolved captcha.\n        this.resolved.emit(null);\n      }\n\n      this.grecaptchaReset();\n    }\n  }\n\n  /** @internal */\n  private expired() {\n    this.resolved.emit(null);\n  }\n\n  /** @internal */\n  private errored(args: RecaptchaErrorParameters) {\n    this.error.emit(args);\n  }\n\n  /** @internal */\n  private captchaResponseCallback(response: string) {\n    this.resolved.emit(response);\n  }\n\n  /** @internal */\n  private grecaptchaReset() {\n    if (this.widget != null) {\n      this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n    }\n  }\n\n  /** @internal */\n  private renderRecaptcha() {\n    // This `any` can be removed after @types/grecaptcha get updated\n    const renderOptions: ReCaptchaV2.Parameters = {\n      badge: this.badge,\n      callback: (response: string) => {\n        this.zone.run(() => this.captchaResponseCallback(response));\n      },\n      \"expired-callback\": () => {\n        this.zone.run(() => this.expired());\n      },\n      sitekey: this.siteKey,\n      size: this.size,\n      tabindex: this.tabIndex,\n      theme: this.theme,\n      type: this.type,\n    };\n\n    if (this.errorMode === \"handled\") {\n      renderOptions[\"error-callback\"] = (...args: RecaptchaErrorParameters) => {\n        this.zone.run(() => this.errored(args));\n      };\n    }\n\n    this.widget = this.grecaptcha.render(\n      this.elementRef.nativeElement,\n      renderOptions\n    );\n\n    if (this.executeRequested === true) {\n      this.executeRequested = false;\n      this.execute();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { RecaptchaComponent } from \"./recaptcha.component\";\n\n@NgModule({\n  declarations: [RecaptchaComponent],\n  exports: [RecaptchaComponent],\n})\nexport class RecaptchaCommonModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { RecaptchaCommonModule } from \"./recaptcha-common.module\";\nimport { RecaptchaLoaderService } from \"./recaptcha-loader.service\";\nimport { RecaptchaComponent } from \"./recaptcha.component\";\n\n@NgModule({\n  exports: [RecaptchaComponent],\n  imports: [RecaptchaCommonModule],\n  providers: [RecaptchaLoaderService],\n})\nexport class RecaptchaModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { isPlatformBrowser } from \"@angular/common\";\nimport {\n  Inject,\n  Injectable,\n  NgZone,\n  Optional,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { loadScript } from \"./load-script\";\nimport {\n  RECAPTCHA_BASE_URL,\n  RECAPTCHA_LANGUAGE,\n  RECAPTCHA_NONCE,\n  RECAPTCHA_V3_SITE_KEY,\n} from \"./tokens\";\n\nexport interface OnExecuteData {\n  /**\n   * The name of the action that has been executed.\n   */\n  action: string;\n  /**\n   * The token that reCAPTCHA v3 provided when executing the action.\n   */\n  token: string;\n}\n\nexport interface OnExecuteErrorData {\n  /**\n   * The name of the action that has been executed.\n   */\n  action: string;\n  /**\n   * The error which was encountered\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n}\n\ntype ActionBacklogEntry = [string, Subject<string>];\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\n@Injectable()\nexport class ReCaptchaV3Service {\n  /** @internal */\n  private readonly isBrowser: boolean;\n  /** @internal */\n  private readonly siteKey: string;\n  /** @internal */\n  private readonly zone: NgZone;\n  /** @internal */\n  private actionBacklog: ActionBacklogEntry[] | undefined;\n  /** @internal */\n  private nonce: string;\n  /** @internal */\n  private language?: string;\n  /** @internal */\n  private baseUrl: string;\n  /** @internal */\n  private grecaptcha: ReCaptchaV2.ReCaptcha;\n\n  /** @internal */\n  private onExecuteSubject: Subject<OnExecuteData>;\n  /** @internal */\n  private onExecuteErrorSubject: Subject<OnExecuteErrorData>;\n  /** @internal */\n  private onExecuteObservable: Observable<OnExecuteData>;\n  /** @internal */\n  private onExecuteErrorObservable: Observable<OnExecuteErrorData>;\n\n  constructor(\n    zone: NgZone,\n    @Inject(RECAPTCHA_V3_SITE_KEY) siteKey: string,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    @Optional() @Inject(RECAPTCHA_BASE_URL) baseUrl?: string,\n    @Optional() @Inject(RECAPTCHA_NONCE) nonce?: string,\n    @Optional() @Inject(RECAPTCHA_LANGUAGE) language?: string\n  ) {\n    this.zone = zone;\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.siteKey = siteKey;\n    this.nonce = nonce;\n    this.language = language;\n    this.baseUrl = baseUrl;\n\n    this.init();\n  }\n\n  public get onExecute(): Observable<OnExecuteData> {\n    if (!this.onExecuteSubject) {\n      this.onExecuteSubject = new Subject<OnExecuteData>();\n      this.onExecuteObservable = this.onExecuteSubject.asObservable();\n    }\n\n    return this.onExecuteObservable;\n  }\n\n  public get onExecuteError(): Observable<OnExecuteErrorData> {\n    if (!this.onExecuteErrorSubject) {\n      this.onExecuteErrorSubject = new Subject<OnExecuteErrorData>();\n      this.onExecuteErrorObservable = this.onExecuteErrorSubject.asObservable();\n    }\n\n    return this.onExecuteErrorObservable;\n  }\n\n  /**\n   * Executes the provided `action` with reCAPTCHA v3 API.\n   * Use the emitted token value for verification purposes on the backend.\n   *\n   * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n   * https://developers.google.com/recaptcha/docs/v3.\n   *\n   * @param {string} action the action to execute\n   * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n   * The returned `Observable` completes immediately after emitting a value.\n   */\n  public execute(action: string): Observable<string> {\n    const subject = new Subject<string>();\n    if (this.isBrowser) {\n      if (!this.grecaptcha) {\n        // todo: add to array of later executions\n        if (!this.actionBacklog) {\n          this.actionBacklog = [];\n        }\n\n        this.actionBacklog.push([action, subject]);\n      } else {\n        this.executeActionWithSubject(action, subject);\n      }\n    }\n\n    return subject.asObservable();\n  }\n\n  /** @internal */\n  private executeActionWithSubject(\n    action: string,\n    subject: Subject<string>\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const onError = (error: any) => {\n      this.zone.run(() => {\n        subject.error(error);\n        if (this.onExecuteErrorSubject) {\n          // We don't know any better at this point, unfortunately, so have to resort to `any`\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          this.onExecuteErrorSubject.next({ action, error });\n        }\n      });\n    };\n\n    this.zone.runOutsideAngular(() => {\n      try {\n        this.grecaptcha\n          .execute(this.siteKey, { action })\n          .then((token: string) => {\n            this.zone.run(() => {\n              subject.next(token);\n              subject.complete();\n              if (this.onExecuteSubject) {\n                this.onExecuteSubject.next({ action, token });\n              }\n            });\n          }, onError);\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }\n\n  /** @internal */\n  private init() {\n    if (this.isBrowser) {\n      if (\"grecaptcha\" in window) {\n        this.grecaptcha = grecaptcha;\n      } else {\n        const langParam = this.language ? \"&hl=\" + this.language : \"\";\n        loadScript(\n          this.siteKey,\n          this.onLoadComplete,\n          langParam,\n          this.baseUrl,\n          this.nonce\n        );\n      }\n    }\n  }\n\n  /** @internal */\n  private onLoadComplete = (grecaptcha: ReCaptchaV2.ReCaptcha) => {\n    this.grecaptcha = grecaptcha;\n    if (this.actionBacklog && this.actionBacklog.length > 0) {\n      this.actionBacklog.forEach(([action, subject]) =>\n        this.executeActionWithSubject(action, subject)\n      );\n      this.actionBacklog = undefined;\n    }\n  };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { ReCaptchaV3Service } from \"./recaptcha-v3.service\";\n\n@NgModule({\n  providers: [ReCaptchaV3Service],\n})\nexport class RecaptchaV3Module {}\n","import { Directive, forwardRef, HostListener } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { RecaptchaComponent } from \"./recaptcha.component\";\n\n@Directive({\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n    },\n  ],\n  // tslint:disable-next-line:directive-selector\n  selector:\n    \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\",\n})\nexport class RecaptchaValueAccessorDirective implements ControlValueAccessor {\n  /** @internal */\n  private onChange: (value: string) => void;\n\n  /** @internal */\n  private onTouched: () => void;\n\n  constructor(private host: RecaptchaComponent) {}\n\n  public writeValue(value: string): void {\n    if (!value) {\n      this.host.reset();\n    }\n  }\n\n  public registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  @HostListener(\"resolved\", [\"$event\"]) public onResolve($event: string): void {\n    if (this.onChange) {\n      this.onChange($event);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { RecaptchaCommonModule } from \"./recaptcha-common.module\";\nimport { RecaptchaValueAccessorDirective } from \"./recaptcha-value-accessor.directive\";\n\n@NgModule({\n  declarations: [RecaptchaValueAccessorDirective],\n  exports: [RecaptchaValueAccessorDirective],\n  imports: [FormsModule, RecaptchaCommonModule],\n})\nexport class RecaptchaFormsModule {}\n"]}